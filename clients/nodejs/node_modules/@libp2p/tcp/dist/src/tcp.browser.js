import { serviceCapabilities, transportSymbol } from '@libp2p/interface';
export class TCP {
    constructor() {
        throw new Error('TCP connections are not possible in browsers');
    }
    [transportSymbol] = true;
    [Symbol.toStringTag] = '@libp2p/tcp';
    [serviceCapabilities] = [
        '@libp2p/transport'
    ];
    async dial() {
        throw new Error('TCP connections are not possible in browsers');
    }
    createListener() {
        throw new Error('TCP connections are not possible in browsers');
    }
    listenFilter() {
        return [];
    }
    dialFilter() {
        return [];
    }
}
//# sourceMappingURL=tcp.browser.js.map